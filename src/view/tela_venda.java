/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connect.connect;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eduar
 */



public class tela_venda extends javax.swing.JFrame {

    public tela_venda() {
        initComponents();        
        inicio();
        inicio_tabela_carrinho();
        
    }

    
    Connection con = null; 
    
    
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TABELA = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btn_ok = new javax.swing.JButton();
        txt_unidades = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela_carrinho = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btn_apagar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        label_total = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_cpf = new javax.swing.JFormattedTextField();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(100, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 102, 0));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("URPH STYLE");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logoJava.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addContainerGap(931, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel11)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 120));

        jPanel3.setBackground(new java.awt.Color(34, 34, 34));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Carrinho");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, -1, -1));

        jScrollPane1.setForeground(new java.awt.Color(255, 102, 0));
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        TABELA.setBackground(new java.awt.Color(34, 34, 34));
        TABELA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TABELA.setForeground(new java.awt.Color(255, 255, 255));
        TABELA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TABELA.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(TABELA);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 1020, 150));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Selecione o produto e adicione no carrinho");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, -1, -1));

        btn_ok.setBackground(new java.awt.Color(255, 51, 0));
        btn_ok.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_ok.setForeground(new java.awt.Color(255, 255, 255));
        btn_ok.setText("Comprar");
        btn_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_okActionPerformed(evt);
            }
        });
        jPanel3.add(btn_ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 630, 730, -1));

        txt_unidades.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_unidades.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jPanel3.add(txt_unidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, 128, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Quantidade:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 290, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("CPF do comprador:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, -1, -1));

        jScrollPane2.setBackground(new java.awt.Color(255, 102, 0));

        tabela_carrinho.setBackground(new java.awt.Color(34, 34, 34));
        tabela_carrinho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabela_carrinho.setForeground(new java.awt.Color(255, 255, 255));
        tabela_carrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabela_carrinho.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tabela_carrinho);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 450, 1010, 160));

        jButton1.setBackground(new java.awt.Color(255, 51, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText(" Adicionar ao carrinho");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 290, 280, 40));

        btn_apagar.setBackground(new java.awt.Color(255, 51, 0));
        btn_apagar.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_apagar.setForeground(new java.awt.Color(255, 255, 255));
        btn_apagar.setText("Apagar do carrinho");
        btn_apagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_apagarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_apagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 630, 250, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 410, -1, -1));

        label_total.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        label_total.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.add(label_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 410, 210, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Produtos");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Seus produtos vão pra cá!");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 410, 190, 20));

        txt_cpf.setBackground(new java.awt.Color(34, 34, 34));
        txt_cpf.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 2, true));
        txt_cpf.setForeground(new java.awt.Color(255, 255, 255));
        try {
            txt_cpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_cpf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel3.add(txt_cpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 290, 200, 30));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1380, 820));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private Object[] pegarLinhaTabela() throws SQLException
    { //Verifica se existe linha selecionada para não dar erro na hora de pegar os valores
      
      int quantidade = (Integer.parseInt(txt_unidades.getValue().toString()));
      if(quantidade == 0)
      {
          JOptionPane.showMessageDialog(null,"Erro, a quantidade de produtos deve ser diferente de 0");
          System.exit(0);
      }
      
      String sql_qtd = "SELECT unidade FROM java_produtos WHERE codigo = '"+(TABELA.getValueAt(TABELA.getSelectedRow(), 0))+"'";
      PreparedStatement st = con.prepareStatement(sql_qtd);
      ResultSet resultado_qnt = st.executeQuery(sql_qtd);
      String qtd[] = new String[1];
      while(resultado_qnt.next())
          {
            qtd[0] = (resultado_qnt.getString("unidade"));
          }
              
      if((Integer.parseInt(qtd[0])) < (quantidade))
      {
          JOptionPane.showMessageDialog(null,"Erro, não é possível comprar além do estoque!");
          System.out.println("Unidades:"+quantidade);
          System.exit(0);
      }
      
      else
      {
          
          System.out.println("Unidades estoque:"+qtd[0]);
      }
        Object[] obj = {TABELA.getValueAt(TABELA.getSelectedRow(), 0),
            TABELA.getValueAt(TABELA.getSelectedRow(), 1),
            TABELA.getValueAt(TABELA.getSelectedRow(), 2),
            quantidade,
            TABELA.getValueAt(TABELA.getSelectedRow(), 4),
            TABELA.getValueAt(TABELA.getSelectedRow(), 5)
        };
          return obj;  
       
       
    }
       
    
    private void btn_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_okActionPerformed
        


try{
     
     con = new connect().getConnection();
     
     int linhas_carrinho = tabela_carrinho.getModel().getRowCount();
     System.out.println("Linhas Tabela Carrinho: "+linhas_carrinho);
     String[] codigo_produto = new String[linhas_carrinho];
     String id[] = new String[1];
     String cpf = "";
     String qtd[] = new String[1];
     double valor_total = 0;
     int lastId = 0;
     int quantidade = (Integer.parseInt(txt_unidades.getValue().toString()));
     int[] unidades = new int[linhas_carrinho];
     float[] valor_unitario = new float[linhas_carrinho];
     
      if (linhas_carrinho !=0)
      { //Verifica se existe linha para não dar erro na hora de pegar os valores
        
          
        for(int i=0; i < linhas_carrinho   ;i++)
        {
            
           codigo_produto[i] = tabela_carrinho.getModel().getValueAt((i),0).toString();
           unidades[i] = (Integer.parseInt((tabela_carrinho.getValueAt(i,3)).toString()));
           valor_unitario[i] = Float.parseFloat((tabela_carrinho.getValueAt(i,4).toString()));
           
        }
        
        for(int aa=0; aa<linhas_carrinho; aa++)
        {
            valor_total = valor_unitario[aa] * unidades[aa];
        }
        
              String sql_cpf = "SELECT * FROM java_clientes WHERE cpf = '"+txt_cpf.getText()+"'";
              System.out.println("SQL CPF: "+sql_cpf);
      PreparedStatement stmt_cpf = con.prepareStatement(sql_cpf);
      ResultSet resultado_cpf = stmt_cpf.executeQuery(sql_cpf);
      
          System.out.println("CPF digitado: "+txt_cpf.getText());
      if(!resultado_cpf.next())
      {
         JOptionPane.showMessageDialog(null,"Cpf inválido!");
         System.exit(0);
      }
    
            cpf = txt_cpf.getText();
              System.out.println("CPF banco: "+resultado_cpf.getString("cpf"));
          
     
        
        
        
        
        
            long millis=System.currentTimeMillis();  
            java.sql.Date data = new java.sql.Date(millis);
            System.out.println("Data da compra: "+data);
            String date = data.toString();
                   String sql_venda = "INSERT INTO java_vendas (id_vendas,data,cpf_cliente) VALUES (default,?,?)";
            PreparedStatement stmt_venda = con.prepareStatement(sql_venda,Statement.RETURN_GENERATED_KEYS);
            {
                stmt_venda.setString(1,date);
                stmt_venda.setString(2,cpf);
                stmt_venda.execute();
            }
            
            final ResultSet rs = stmt_venda.getGeneratedKeys();
            if (rs.next()) 
            {
                lastId = rs.getInt(1);
                System.out.println("Last ID: "+lastId);
            } 
        
        
        
        
        
        
        int sql_for=0;

         for(String item : codigo_produto )
         {
             
             
             System.out.println("Inicio do laço for -----------------------------------------------");

      
      String sql_qtd = "SELECT unidade FROM java_produtos WHERE codigo = '"+item+"'";
      PreparedStatement st = con.prepareStatement(sql_qtd);
      ResultSet resultado_qnt = st.executeQuery(sql_qtd);
      
      while(resultado_qnt.next())
          {
            qtd[0] = (resultado_qnt.getString("unidade"));
          }
              
      if((Integer.parseInt(qtd[0])) < (quantidade))
      {
          JOptionPane.showMessageDialog(null,"Erro, não é possível comprar além do estoque!");
          System.out.println("Unidades:"+quantidade);
          System.exit(0);
      }
      

      
                      

      

   
      
      

     
     String sql = "SELECT id_produto FROM java_produtos WHERE codigo = '"+item+"'";
     PreparedStatement stmt = con.prepareStatement(sql);
     ResultSet resultado = stmt.executeQuery(sql);
     
            while(resultado.next())
            {
             id[0] = (resultado.getString("id_produto"));
            }
                
                
                

     
             
            

                
                
            
            
                int novo_estoque = (Integer.parseInt(qtd[0])) - quantidade;
          String sql_update_estoque = "UPDATE java_produtos SET unidade = '"+novo_estoque+"'  WHERE codigo = '"+item+"'";
          PreparedStatement stmt_update_estoque = con.prepareStatement(sql_update_estoque);
          stmt_update_estoque.execute(sql_update_estoque);
          inicio(); 

          
                      System.out.println("Se essa mensagem aparecer, o programa terminou o laço for com sucesso!");
          String sql_itens_venda = "INSERT INTO java_itens_venda VALUES (?,?,?,?,?)";
          PreparedStatement stmt_itens_venda = con.prepareStatement(sql_itens_venda);
          stmt_itens_venda.setInt(1,lastId);
          stmt_itens_venda.setInt(2,(Integer.parseInt(id[0])));
          stmt_itens_venda.setInt(3,unidades[sql_for]);
          stmt_itens_venda.setFloat(4, valor_unitario[sql_for]);
          stmt_itens_venda.setDouble(5, unidades[sql_for] * valor_unitario[sql_for]);
          stmt_itens_venda.execute(); 
          
          sql_for = sql_for + 1;
         }//fecha for item

         
         
         
         
         
         
         
         
         
         
         
         
                     for(int a=0; a<linhas_carrinho; a++)
            {
                
                System.out.println("--------------------------");
                System.out.println("Unidades: "+unidades[a]);
                System.out.println("Valor unitário: "+valor_unitario[a]);
                System.out.println("Valor Total: "+valor_total);
                System.out.println("--------------------------");
            }
                     
                     
          System.out.print("Array valor unitário");
System.out.println(Arrays.toString(valor_unitario));
          System.out.print("Array unidades");
System.out.println(Arrays.toString(unidades));
          System.out.print("Array codigo produto");
System.out.println(Arrays.toString(codigo_produto));


JOptionPane.showMessageDialog(null,"Compra efetuada com sucesso!");
txt_unidades.setValue(0);
         
      } 
      
      else 
      { 

        JOptionPane.showMessageDialog(null,"Erro, Mova algum produto para o carrinho antes de efetuar a compra!");
          System.exit(0);  
          
      }
            
      
      
      

          
              
      


  }     
 catch (ClassNotFoundException | SQLException ex)
 {
     ex.printStackTrace();
  }      
      
      
      
    }//GEN-LAST:event_btn_okActionPerformed

    
   
    
    
    
    
    
    
    
    
    
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       //adiciona itens na tabela de baixo
        
        DefaultTableModel model = (DefaultTableModel) tabela_carrinho.getModel();
        
    try {
        model.addRow(pegarLinhaTabela());
    } catch (SQLException ex) {
        Logger.getLogger(tela_venda.class.getName()).log(Level.SEVERE, null, ex);
    }
    tabela_carrinho.setModel(model);
    int linhas_carrinho = tabela_carrinho.getModel().getRowCount();
    float total = 0;
    

        
        
    for(int x=0;x<linhas_carrinho;x++)
    {
        total += Float.parseFloat((tabela_carrinho.getValueAt(x,4).toString())) * (Integer.parseInt((tabela_carrinho.getValueAt(x,3)).toString()));
    }
    label_total.setText("R$:"+total);
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_apagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_apagarActionPerformed
    DefaultTableModel model = (DefaultTableModel) tabela_carrinho.getModel();
        int linha = tabela_carrinho.getSelectedRow();
        model.removeRow(linha);
    tabela_carrinho.setModel(model);
        int linhas_carrinho = tabela_carrinho.getModel().getRowCount();
    float total = 0;
    

       txt_unidades.setValue(0); 
        
    for(int x=0;x<linhas_carrinho;x++)
    {
        total += Float.parseFloat((tabela_carrinho.getValueAt(x,4).toString())) * (Integer.parseInt((tabela_carrinho.getValueAt(x,3)).toString()));
    }

    label_total.setText("R$:"+total);
    
    }//GEN-LAST:event_btn_apagarActionPerformed

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    private void inicio_tabela_carrinho()
    {
        
    DefaultTableModel model = new DefaultTableModel(null,new String[]{"Codigo", "Nome", "Descrição","Unidades", "Preço","Tamanho"})
{
     @Override
        public boolean isCellEditable(int row, int col)
    {
    return false;
    }
};
    
    tabela_carrinho.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 15));
   
    tabela_carrinho.getParent().setBackground(new Color(34,34,34));    
    
    
    tabela_carrinho.setModel(model); 
    }
    
    
    
    
    
    
    
    public void inicio()
    {
     //inicia a tabela de produtos   
        try
        {
      con = new connect().getConnection();
      String sql = "SELECT codigo,nome,descricao,unidade,preço,tamanho FROM java_produtos ORDER BY tamanho DESC";
      PreparedStatement stmt = con.prepareStatement(sql);
      ResultSet resultado = stmt.executeQuery(sql);
 
DefaultTableModel model = new DefaultTableModel(null,new String[]{"Codigo", "Nome", "Descrição","Estoque", "Preço","Tamanho"})
{
     @Override
        public boolean isCellEditable(int row, int col)
    {
    return false;
    }
};
        
        while(resultado.next())
   {
 
          String dados[] = new String[6];
          dados[0] = resultado.getString("codigo");
          dados[1] = resultado.getString("nome");
          dados[2] = resultado.getString("descricao");
          dados[3] = resultado.getString("unidade");
          dados[4] = resultado.getString("preço");
          dados[5] = resultado.getString("tamanho");
          model.addRow(dados);
  } 

            TABELA.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 15));
   
    TABELA.getParent().setBackground(new Color(34,34,34));    
   
   TABELA.setModel(model);



  }     
 catch (ClassNotFoundException | SQLException ex)
 {
    System.out.println("o erro foi " +ex);
  }       
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tela_venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tela_venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tela_venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tela_venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new tela_venda().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TABELA;
    private javax.swing.JButton btn_apagar;
    private javax.swing.JButton btn_ok;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_total;
    private javax.swing.JTable tabela_carrinho;
    private javax.swing.JFormattedTextField txt_cpf;
    private javax.swing.JSpinner txt_unidades;
    // End of variables declaration//GEN-END:variables
}
